@model SacramentMeetingPlanner.Models.Meeting

@{
    ViewData["Title"] = "Meetings";
    ViewData["PageTitle"] = "Meeting Details";
}

<div class="bg-amber-100 shadow overflow-hidden sm:rounded-lg my-12" id="programContainer">
    <div class="flex flex-col sm:flex-row px-4 py-5 sm:px-6  sm:justify-between" id="headingContainer">
        <div>
            <h3 class="text-lg leading-6 font-medium text-amber-900">Farm Lake Ward</h3>
            <p class="mt-1 max-w-2xl text-sm text-amber-700" id="date"> @Html.DisplayFor(model => model.MeetingDate)
            </p>
        </div>
        <div class="mt-1 sm:mt-0" id="meetingActions">
            <div id="meetingActions">
                <a class="btn btn-list" asp-action="Edit" asp-route-id="@Model.ID">Edit</a>
                <a class="btn btn-list" asp-action="Index">Back to List</a>
                <a class="btn btn-listlg border-amber-900" id="printPDF" href="#">Print</a>
            </div>
        </div>
    </div>
    <div class="border-t border-amber-200" id="meetingContent">
        <dl>
            <div class="bg-amber-100 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6 programRow">
                <dt class="text-sm font-medium text-amber-700"> @Html.DisplayNameFor(model => model.Member)</dt>
                <dd class="mt-1 text-sm text-amber-900 sm:mt-0 sm:col-span-2">@Html.DisplayFor(model =>
                    model.Member.FullName)</dd>
            </div>
            <div class="bg-amber-50 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6 programRow">
                <dt class="text-sm font-medium text-amber-700"> @Html.DisplayNameFor(model => model.OpeningHymn)</dt>
                <dd class="mt-1 text-sm text-amber-900 sm:mt-0 sm:col-span-2">@Html.DisplayFor(model =>
                    model.OpeningHymn)</dd>
            </div>
            <div class="bg-amber-100 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6 programRow">
                <dt class="text-sm font-medium text-amber-700">Opening Prayer</dt>
                <dd class="mt-1 text-sm text-amber-900 sm:mt-0 sm:col-span-2"> @Html.DisplayFor(model =>
                    model.Participants.ElementAt(0).Member.FullName)</dd>
            </div>
            <div class="bg-amber-50 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6 programRow">
                <dt class="text-sm font-medium text-amber-700"> @Html.DisplayNameFor(model => model.SacramentHymn)</dt>
                <dd class="mt-1 text-sm text-amber-900 sm:mt-0 sm:col-span-2">@Html.DisplayFor(model =>
                    model.SacramentHymn)</dd>
            </div>
            @{
                int speakers = Model.Participants.Count - 2;
                if (speakers == 0)
                {
                    <div class="even:bg-amber-100 odd:bg-amber-50 text-white px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6 programRow">
                        <dt class="text-sm font-medium text-amber-700">Testimony Meeting</dt>
                        <dd class="mt-1 text-sm text-amber-900 sm:mt-0 sm:col-span-2">Open to the Congregation</dd>
                    </div>
                }
                else
                {
                    int splitSpeakers = -1;
                    if (Model.IntermediateNumber != null)
                    {
                        splitSpeakers = (speakers - 1) / 2;
                    }
                    for (int i = 0; i < speakers; i++)
                    {
                        <div class="even:bg-amber-100 odd:bg-amber-50 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6 programRow">
                            <dt class="text-sm font-medium text-amber-700">Speaker</dt>
                            <dd class="mt-1 text-sm text-amber-900 sm:mt-0 sm:col-span-2">@Html.DisplayFor(model =>
                    model.Participants.ElementAt(i + 2).Member.FullName)</dd>
                        </div>

                        <div class="even:bg-amber-100 odd:bg-amber-50 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6 topic">
                            <dt class="text-sm font-medium text-amber-700">@Html.DisplayNameFor(model =>
                    model.Participants.ElementAt(i + 2).Topic)</dt>
                            <dd class="mt-1 text-sm text-amber-900 sm:mt-0 sm:col-span-2"> @Html.DisplayFor(model =>
                    model.Participants.ElementAt(i + 2).Topic)</dd>
                        </div>
                        if (i == splitSpeakers)
                        {
                            <div class="even:bg-amber-100 odd:bg-amber-50 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6 programRow">
                                <dt class="text-sm font-medium text-amber-700"> @Html.DisplayNameFor(model => model.IntermediateNumber)
                                </dt>
                                <dd class="mt-1 text-sm text-amber-900 sm:mt-0 sm:col-span-2"> @Html.DisplayFor(model =>
                    model.IntermediateNumber)</dd>
                            </div>
                        }
                    }
                }
            }
            <div class="bg-amber-50 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6 programRow">
                <dt class="text-sm font-medium text-amber-700"> @Html.DisplayNameFor(model => model.ClosingHymn)</dt>
                <dd class="mt-1 text-sm text-amber-900 sm:mt-0 sm:col-span-2">@Html.DisplayFor(model =>
                    model.ClosingHymn)</dd>
            </div>
            <div class="bg-amber-100 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6 programRow">
                <dt class="text-sm font-medium text-amber-700">Closing Prayer</dt>
                <dd class="mt-1 text-sm text-amber-900 sm:mt-0 sm:col-span-2"> @Html.DisplayFor(model =>
                    model.Participants.ElementAt(1).Member.FullName)</dd>
            </div>
        </dl>
    </div>
</div>
@section Scripts
{
<script src="~/js/printProgram.js"></script>
}